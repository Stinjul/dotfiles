# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu rofi

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "9494:59:Cooler_Master_Technology_Inc._MasterKeys_Pro_L" {
    xkb_numlock enabled
    xkb_layout "be,us"
}

input "0:0:virtual_keyboard" {
    xkb_numlock enabled
    xkb_layout "be,us"
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu -show run
    bindsym $mod+Tab exec $menu -show window

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    #bindsym Control+n exec ~/scripts/dunst-active-or-passthrough.sh close 'ctrl+space'
    #bindsym Control+Shift+n exec ~/scripts/dunst-active-or-passthrough.sh close-all 'ctrl+shift+space'

    bindsym $mod+n exec dunstctl close
    bindsym $mod+Shift+n exec dunstctl close-all

    bindsym Control+Tab exec dunstctl history-pop
    bindsym Control+Shift+Tab exec dunstctl context

    bindsym $mod+Alt+s exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy
    bindsym $mod+Control+s exec grim -g "$(slurp)" - | wl-copy

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+ampersand workspace 1
    bindsym $mod+eacute workspace 2
    bindsym $mod+quotedbl workspace 3
    bindsym $mod+apostrophe workspace 4
    bindsym $mod+parenleft workspace 5
    bindsym $mod+section workspace 6
    bindsym $mod+egrave workspace 7
    bindsym $mod+exclam workspace 8
    bindsym $mod+ccedilla workspace 9
    bindsym $mod+agrave workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+ampersand move container to workspace 1
    bindsym $mod+Shift+eacute move container to workspace 2
    bindsym $mod+Shift+quotedbl move container to workspace 3
    bindsym $mod+Shift+apostrophe move container to workspace 4
    bindsym $mod+Shift+parenleft move container to workspace 5
    bindsym $mod+Shift+section move container to workspace 6
    bindsym $mod+Shift+egrave move container to workspace 7
    bindsym $mod+Shift+exclam move container to workspace 8
    bindsym $mod+Shift+ccedilla move container to workspace 9
    bindsym $mod+Shift+agrave move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # move current workspace between monitors
    bindsym $mod+Control+h move workspace to output left
    bindsym $mod+Control+j move workspace to output down
    bindsym $mod+Control+k move workspace to output up
    bindsym $mod+Control+l move workspace to output right

    # cursor keys
    bindsym $mod+Control+Left move workspace to output left
    bindsym $mod+Control+Down move workspace to output down
    bindsym $mod+Control+Up move workspace to output up
    bindsym $mod+Control+Right move workspace to output right
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    #bindsym $mod+minus scratchpad show

    for_window [app_id="dropdown"] floating enable
    for_window [app_id="dropdown"] resize set 1440 824
    for_window [app_id="dropdown"] move scratchpad
    for_window [app_id="dropdown"] border pixel 3

    bindsym $mod+Shift+Return [app_id="dropdown"] scratchpad show; [app_id="dropdown"] move position center; [app_id="dropdown"] resize set 1440 824
    exec $term --class dropdown --session ~/.config/kitty/scratchpad.session --override background_opacity=1
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Music Controls
#

bindsym $mod+KP_Add exec ~/scripts/rofi/playerctl_selector.sh -c 'volume 0.05+'
bindsym $mod+XF86AudioRaiseVolume exec ~/scripts/rofi/playerctl_selector.sh -c 'volume 0.05+'

bindsym $mod+KP_Subtract exec ~/scripts/rofi/playerctl_selector.sh -c 'volume 0.05-'
bindsym $mod+XF86AudioLowerVolume exec ~/scripts/rofi/playerctl_selector.sh -c 'volume 0.05-'

bindsym $mod+KP_Divide exec ~/scripts/rofi/playerctl_selector.sh -r
bindsym $mod+KP_Multiply exec ~/scripts/rofi/playerctl_selector.sh

bindsym XF86AudioPlay exec mpc play
bindsym XF86AudioPause exec mpc pause
bindsym XF86AudioStop exec mpc stop
bindsym XF86AudioNext exec mpc next
bindsym XF86AudioPrev exec mpc prev


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    #position top

    ## When the status_command prints a new line to stdout, swaybar updates.
    ## The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    #colors {
    #    statusline #ffffff
    #    background #323232
    #    inactive_workspace #32323200 #32323200 #5c5c5c
    #}
    swaybar_command waybar
}

include /etc/sway/config.d/*
include ~/.config/sway/config.d/*.conf
